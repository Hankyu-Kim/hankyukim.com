---
import ROSImg from "@/assets/ROS.jpg";
import PageLayout from "@/layouts/Base.astro";
import { Image } from "astro:assets";

const meta = {
	description: "I'm a starter theme for Astro.build",
	title: "About",
};
---

<PageLayout meta={meta}>
	<div class="space-y-6">
		<h1 class="title">ROS1 VS ROS2</h1>
		<p>
			ROS1 communicated through its own TCPROS.
		</p>
		<p>
			Unlike ROS1, ROS2 communicates through the DDS RTPS protocol standardized by OMG.
		</p>
		<p>
			Real Time Public Subscription (RTPS) is a data transmission protocol for data distribution services (DDS) standardized by an object management group (OMG).
		</p>
		<p>
			MQTT, a method used in ROS1, delivers a message through a broker based on TCP, while DDS does not have an intermediate medium based on UDP.
		</p>
		<p>
			Since it is UDP-based communication, it is basically not reliable, but it is possible to establish quality of service (QoS) to ensure reliability.
		</p>
		<p>
			DDS has 22 QoS types and ROS2 uses six options.
		</p>
		<p>
			Methods of communicating include topic, service, action, and parameter.
		</p>
		<div class="flex justify-center">
			<Image
				alt="A cartoon cactus looking at the 'Astro.build' logo"
				fetchpriority="high"
				loading="eager"
				src={ROSImg}
			/>
		</div>

		<br>
		<br>
		<br>
		<br>
		<br>

		<h1 class="title">QoS Parameter from DDS</h1>
		<p>
			History : Select length of que, FIFO/LIFO.
		</p>
		<p>
			1. Reliability : Using ACK/NACK signal for reliability.
		</p>
		<p>
			2. Durability : Remove history of sent data.
		</p>
		<p>
			3. Deadline : Get noticed from the latency delay.
		</p>
		<p>
			4. TimeBasedFilter : Limit ‘subscribe’ for once in a certain time.
		</p>
		<p>
			5. DestinaitonOrder :
		</p>
		<p>
			SOURCE_TIMESTAMP : Sort data based on data published time.
		</p>
		<p>
			RECEPTION_TIMESTAMP : Sort data based on data subscribed time.
		</p>
		<p>
			6. Lifespan : Set the data lifespan.
		</p>
		<p>
			7. Liveliness : Using AUTO/MANUAL signal to manage liveliness.
		</p>
		<p>
			8. Partition : Categorize by partition name (only communicat with same group’s DDS object).
		</p>
		<p>
			9. Ownership :
		</p>
		<p>
			SHARED : Share the data simultaneously.
		</p>
		<p>
			EXCLUSIVE : Receive only data based on priority
		</p>
</PageLayout>
